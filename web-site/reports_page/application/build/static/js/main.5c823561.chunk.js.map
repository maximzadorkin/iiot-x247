{"version":3,"sources":["components/ReportsPage/FavoritesScreen/FavoritesScreen.module.css","components/ReportsPage/Quiz.module.css","components/ReportsPage/QuizHeader/QuizHeader.module.css","components/SearchWithSelection/SearchWithSelection.module.css","components/SideContents/Header/Header.module.css","components/ReportsPage/SpecificationScreen/SpecificationScreen.module.css","components/ReportsPage/MainScreen/MainScreen.module.css","components/SideContents/Header/Header.js","components/SideContents/SideBarNavigation/SideBarNavigation.js","components/SideContents/SideContents.js","components/ReportsPage/StartScreen/StartScreen.js","Functions/Keys.js","components/ReportsPage/FavoritesScreen/FavoritesScreen.js","components/ReportsPage/QuizHeader/QuizHeader.js","components/SearchWithSelection/SearchWithSelection.js","components/ReportsPage/MainScreen/MainScreen.js","components/ReportsPage/SpecificationScreen/SpecificationScreen.js","components/ReportsPage/Quiz.js","containers/ReportsPage/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","props","className","customClasses","header","black","icon","click","activePageTitle","href","linkToRoom","Fragment","Header","SideBarNavigation","startScreen","btn","light","onClick","changeScreen","yellow","Keys","getRandomKey","Math","floor","random","FavoritesScreen","state","activeFavorite","favorites","setParams","setActiveType","setActiveCategory","setActiveSpecification","setActiveTimePeriods","setFavorite","event","value","target","textContent","setState","prevValue","map","item","title","active","getFavorite","getSearches","this","favoritesScreen","text","dark","btnToStartHandle","mainBlock","favoritesUl","favoritesLi","key","React","Component","quizHeader","groupBtn","red","btnBackHandle","btnNextHandle","SearchWithSelection","changeValueHandle","setActiveValue","getCloseButton","canClose","closeBtn","getActiveSearches","searchLi","container","searchHeader","Close","searchLabel","type","searchInput","onChange","getActiveValue","autoFocus","searchUl","style","height","heightSearchesUl","MainScreen","elements","activeSearch","getActiveType","getActiveCategory","isSomeOneActiveSearch","reduce","acc","arePreFilled","beforeIndex","index","openSearch","el","closeSearch","getSteps","openSearchBtn","mainScreen","QuizHeader","SpecificationScreen","componentDidMount","screen","specificationBlock","Quiz","activeScreen","screensSequence","activeType","activeCategory","activeSpecifications","activeTimePeriods","searches","specification","labelsArr","activeIndex","report","content","setSpecification","getActiveSpecification","newScreen","canChange","returnScreen","nextScreen","StartScreen","labels","load","pop","quiz","Layout","isMobile","SideContents","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5c823561.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"favoritesScreen\":\"FavoritesScreen_favoritesScreen__3RrQp\",\"mainBlock\":\"FavoritesScreen_mainBlock__3J0sa\",\"title\":\"FavoritesScreen_title__CN0nJ\",\"btn\":\"FavoritesScreen_btn__16BQa\",\"yellow\":\"FavoritesScreen_yellow__3BCTP\",\"text\":\"FavoritesScreen_text__3FLkk\",\"dark\":\"FavoritesScreen_dark__1fLG5\",\"favoritesUl\":\"FavoritesScreen_favoritesUl__27vdc\",\"favoritesLi\":\"FavoritesScreen_favoritesLi__3Hc6f\",\"active\":\"FavoritesScreen_active__34lAZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quiz\":\"Quiz_quiz__3X_Q-\",\"btn\":\"Quiz_btn__2Xpdo\",\"light\":\"Quiz_light__8yXJP\",\"yellow\":\"Quiz_yellow__QUeEL\",\"click\":\"Quiz_click__373pB\",\"startScreen\":\"Quiz_startScreen__29oka\",\"icon\":\"Quiz_icon__vBUFQ\",\"load\":\"Quiz_load__3BGoM\",\"spin\":\"Quiz_spin__1Zjny\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quizHeader\":\"QuizHeader_quizHeader__2TCwY\",\"groupBtn\":\"QuizHeader_groupBtn__1ET0I\",\"btn\":\"QuizHeader_btn__3ak5z\",\"green\":\"QuizHeader_green__tCF0K\",\"text\":\"QuizHeader_text__1Wpzk\",\"red\":\"QuizHeader_red__15j5v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchWithSelection_container__3gzjW\",\"searchHeader\":\"SearchWithSelection_searchHeader__2QRYK\",\"searchLabel\":\"SearchWithSelection_searchLabel__2voFb\",\"closeBtn\":\"SearchWithSelection_closeBtn__1ypwM\",\"searchInput\":\"SearchWithSelection_searchInput__3qO9E\",\"searchUl\":\"SearchWithSelection_searchUl__1yBS5\",\"searchLi\":\"SearchWithSelection_searchLi__3qyPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__385ie\",\"black\":\"Header_black__2WdiA\",\"click\":\"Header_click__MkLih\",\"icon\":\"Header_icon__12nd1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"screen\":\"SpecificationScreen_screen__W9s0V\",\"mainBlock\":\"SpecificationScreen_mainBlock__29qyH\",\"specificationBlock\":\"SpecificationScreen_specificationBlock__1MVn0\",\"openSearchBtn\":\"SpecificationScreen_openSearchBtn__1-cmj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainScreen\":\"MainScreen_mainScreen__2rj7x\",\"mainBlock\":\"MainScreen_mainBlock__3bY59\",\"openSearchBtn\":\"MainScreen_openSearchBtn__1G5HE\"};","import React from 'react';\r\nimport customClasses from './Header.module.css';\r\n\r\nexport default (props) => {\r\n  return (\r\n    <div className={`${customClasses.header} ${customClasses.black}`}>\r\n      <p className={`${customClasses.icon} ${customClasses.click}`}>&#x61;</p>\r\n      <h1>{props.activePageTitle}</h1>\r\n      <a \r\n        href={props.linkToRoom}\r\n        className={`${customClasses.icon} ${customClasses.click}`}\r\n      >\r\n        &#xe0fc;\r\n      </a>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\n\r\nexport default (props) => (\r\n  <div></div>\r\n);","import React from 'react';\r\nimport Header from './Header/Header.js';\r\nimport SideBarNavigation from './SideBarNavigation/SideBarNavigation.js';\r\n\r\nconst linkToRoom = '#'\r\nexport default (props) => (\r\n <React.Fragment>\r\n   <Header\r\n    activePageTitle={props.activePageTitle}\r\n    linkToRoom={linkToRoom}  \r\n  />\r\n   <SideBarNavigation />\r\n </React.Fragment> \r\n);","import React from 'react';\r\nimport customClasses from '../Quiz.module.css';\r\n\r\nexport default (props) => (\r\n  <div className={customClasses.startScreen}>\r\n    <button\r\n      className={`${customClasses.btn} ${customClasses.light} ${customClasses.click}`}\r\n      onClick={() => props.changeScreen('main_screen')}\r\n    >\r\n      Создать отчет\r\n    </button>\r\n    <button\r\n      className={`${customClasses.btn} ${customClasses.yellow} ${customClasses.click}`}\r\n      onClick={() => props.changeScreen('favorites_screen')}\r\n    >\r\n      Избранное\r\n    </button>\r\n  </div>\r\n);","class Keys {\r\n  static getRandomKey = () => `${Math.floor(Math.random() * 1000000)}`\r\n}\r\nexport default Keys;","import React from 'react';\r\n// import axios from 'axios';\r\nimport Keys from '../../../Functions/Keys.js';\r\nimport customClasses from './FavoritesScreen.module.css';\r\n\r\nclass FavoritesScreen extends React.Component {\r\n\r\n  state = {\r\n    activeFavorite: '',\r\n    favorites: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      favorites: this.getSearches().map(item => ({title: item, active: false})) \r\n    });\r\n  }\r\n\r\n  setParams = () => {\r\n    // запросить данное избранное и активировать параметры\r\n    this.props.setActiveType();\r\n    this.props.setActiveCategory();\r\n    this.props.setActiveSpecification();\r\n    this.props.setActiveTimePeriods();\r\n    this.props.changeScreen('finish_screens');\r\n  }\r\n  setFavorite = (event) => {\r\n    const value = event.target.textContent;\r\n    this.setState(prevValue => ({\r\n      activeFavorite: value,\r\n      favorites: prevValue.favorites\r\n        .map(item => item.title === value\r\n          ? {...item, active: true}\r\n          : {...item, active: false})\r\n    }));\r\n  }\r\n  getFavorite = () => this.state.activeFavorite\r\n\r\n  // запросить параметры\r\n  getSearches = () => [\r\n    'd sa',\r\n    ' zxcfv j',\r\n    ' zxcfv g',\r\n    ' zxcfv b',\r\n    ' zxcfv 1',\r\n    ' zxcfv e',\r\n    ' zxcfv w',\r\n    ' zxcfv a',\r\n    ' zxcfv d',\r\n    'fsdf vcxvc cv'\r\n  ]\r\n\r\n  render() {\r\n    return (\r\n      <div className={customClasses.favoritesScreen}>\r\n        <button\r\n          className={`${customClasses.btn} ${customClasses.text} ${customClasses.dark}`}\r\n          onClick={this.props.btnToStartHandle}\r\n        >\r\n          &#x38;\r\n        </button>\r\n        <div className={customClasses.mainBlock}>\r\n          <label className={customClasses.title}>Избранное</label>\r\n          <ul className={customClasses.favoritesUl}>\r\n            {\r\n              this.state.favorites.map(item =>\r\n                <li \r\n                  className={item.active\r\n                    ? `${customClasses.favoritesLi} ${customClasses.active}`\r\n                    : customClasses.favoritesLi}\r\n                  onClick={this.setFavorite}\r\n                  key={Keys.getRandomKey()}\r\n                >\r\n                  {item.title}\r\n                </li>\r\n              )\r\n            }\r\n          </ul>\r\n        </div>\r\n        <button\r\n          className={`${customClasses.btn} ${customClasses.yellow}`}\r\n          onClick={this.setParams}\r\n        >\r\n          Загрузить избранное\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FavoritesScreen;","import React from 'react';\r\nimport customClasses from './QuizHeader.module.css';\r\n\r\nexport default (props) => (\r\n  <div className={customClasses.quizHeader}>\r\n    <div className={customClasses.groupBtn}>\r\n      <button\r\n        className={`${customClasses.btn} ${customClasses.text} ${customClasses.red}`}\r\n        onClick={props.btnToStartHandle}\r\n      >\r\n        &#x38;\r\n      </button>\r\n      <button\r\n        className={customClasses.btn}\r\n        onClick={props.btnBackHandle}\r\n      >\r\n        &#x34;\r\n      </button>\r\n    </div>\r\n    <button\r\n      className={`${customClasses.btn}`}\r\n      onClick={props.btnNextHandle}\r\n    >\r\n      &#x35;\r\n    </button>\r\n  </div>\r\n);","import React from 'react';\r\nimport Keys from '../../Functions/Keys.js';\r\nimport customClasses from './SearchWithSelection.module.css';\r\n\r\n// heightSearchesUl={'250px'}\r\n// canClose={true}\r\n// Close={() => this.closeSearch(item)}\r\n// title={item.title}\r\n// setActiveValue={item.setActiveValue}\r\n// getActiveValue={item.getActiveValue}\r\n// getSearches={item.getSearches}\r\n// key={Keys.getRandomKey()}\r\nclass SearchWithSelection extends React.Component {\r\n\r\n  changeValueHandle = (value) =>\r\n    this.props.setActiveValue(value);\r\n\r\n  getCloseButton = () => (\r\n    this.props.canClose\r\n    ?\r\n    <button className={customClasses.closeBtn}>\r\n      &#x42;\r\n    </button>\r\n    : null\r\n  )\r\n\r\n  getActiveSearches = () => (\r\n    this.props.getSearches().map(item => (\r\n      <li\r\n        className={customClasses.searchLi}\r\n        onClick={(event) => this.changeValueHandle(event.target.textContent)}\r\n        key={Keys.getRandomKey()}\r\n      >\r\n        {item}\r\n      </li>\r\n    ))\r\n  );\r\n\r\n  render() {\r\n    return (\r\n      <div className={customClasses.container}>\r\n        <div\r\n          className={customClasses.searchHeader}\r\n          onClick={this.props.Close}\r\n        >\r\n          <label className={customClasses.searchLabel}>\r\n            {this.props.title}\r\n          </label>\r\n          {this.getCloseButton()}\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          className={customClasses.searchInput}\r\n          onChange={(event) => this.changeValueHandle(event.target.value)}\r\n          value={this.props.getActiveValue()}\r\n          autoFocus\r\n        />\r\n\r\n        <ul\r\n          className={customClasses.searchUl}\r\n          style={{height: this.props.heightSearchesUl}}\r\n        >\r\n          {this.getActiveSearches()}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SearchWithSelection;","import React from 'react';\r\nimport Keys from '../../../Functions/Keys.js';\r\nimport QuizHeader from '../QuizHeader/QuizHeader.js';\r\nimport SearchWithSelection from '../../SearchWithSelection/SearchWithSelection.js';\r\nimport customClasses from './MainScreen.module.css';\r\n\r\n// setActiveType\r\n// getActiveType\r\n// setActiveCategory\r\n// getActiveCategory\r\n// getSearches\r\n\r\nclass MainScreen extends React.Component {\r\n  \r\n  state = {\r\n    elements: [\r\n      {\r\n        title: 'Выбрать тип',\r\n        activeSearch: false,\r\n        getActiveValue: this.props.getActiveType,\r\n        setActiveValue: this.props.setActiveType,\r\n        getSearches: this.props.getSearches\r\n      },\r\n      {\r\n        title: 'Выбрать категорию',\r\n        activeSearch: false,\r\n        getActiveValue: this.props.getActiveCategory,\r\n        setActiveValue: this.props.setActiveCategory,\r\n        getSearches: this.props.getSearches\r\n      }\r\n    ]\r\n  }\r\n\r\n  isSomeOneActiveSearch = () => this.state.elements.reduce(\r\n    (acc, item) => item.activeSearch + acc, false)\r\n\r\n  arePreFilled = (beforeIndex) => this.state.elements.reduce(\r\n    (acc, item, index) =>\r\n      index < beforeIndex\r\n      ? acc * (item.getActiveValue() !== '')\r\n      : acc,\r\n    true\r\n  )\r\n\r\n  openSearch = (item) => {\r\n    this.setState({\r\n      elements: [\r\n        ...this.state.elements\r\n          .map(el =>\r\n            el.title === item.title\r\n            ? {...el, activeSearch: true}\r\n            : {...el, activeSearch: false})\r\n      ]\r\n    });\r\n  }\r\n\r\n  closeSearch = (item) => {\r\n    this.setState({\r\n      elements: [\r\n        ...this.state.elements\r\n          .map(el => el.title === item.title ? {...el, activeSearch: false} : el)\r\n      ]\r\n    });\r\n  }\r\n\r\n  getSteps = () => this.state.elements.map((item, index) =>\r\n    !this.arePreFilled(index) ? null :\r\n      item.activeSearch\r\n      ? (\r\n        <SearchWithSelection\r\n          heightSearchesUl={'200px'}\r\n          canClose={true}\r\n          Close={() => this.closeSearch(item)}\r\n          title={item.title}\r\n          setActiveValue={item.setActiveValue}\r\n          getActiveValue={item.getActiveValue}\r\n          getSearches={item.getSearches}\r\n          key={Keys.getRandomKey()}\r\n        />\r\n      )\r\n      : this.isSomeOneActiveSearch() ? null : (\r\n        <button\r\n          className={customClasses.openSearchBtn}\r\n          onClick={() => this.openSearch(item)}\r\n          key={Keys.getRandomKey()}\r\n        >\r\n            {`${item.title} (${item.getActiveValue()})`}\r\n        </button>\r\n      )\r\n  )\r\n  \r\n  render() {\r\n    return (\r\n      <div className={customClasses.mainScreen}>\r\n        <QuizHeader\r\n          btnToStartHandle={this.props.btnToStartHandle}\r\n          btnBackHandle={this.props.btnBackHandle}\r\n          btnNextHandle={() => this.props.btnNextHandle('specification_screen')}\r\n        />\r\n        <div className={customClasses.mainBlock}>\r\n          {this.getSteps()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MainScreen;","import React from 'react';\r\nimport Keys from '../../../Functions/Keys.js';\r\nimport QuizHeader from '../QuizHeader/QuizHeader.js';\r\nimport SearchWithSelection from '../../SearchWithSelection/SearchWithSelection.js';\r\nimport customClasses from './SpecificationScreen.module.css';\r\n\r\nclass SpecificationScreen extends React.Component {\r\n\r\n  state = {\r\n    elements: [\r\n      {\r\n        title: 'Выбрать тип',\r\n        activeSearch: false,\r\n        getActiveValue: this.props.getActiveType,\r\n        setActiveValue: this.props.setActiveType,\r\n        getSearches: this.props.getSearches\r\n      },\r\n      {\r\n        title: 'Выбрать категорию',\r\n        activeSearch: false,\r\n        getActiveValue: this.props.getActiveCategory,\r\n        setActiveValue: this.props.setActiveCategory,\r\n        getSearches: this.props.getSearches\r\n      }\r\n    ]\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.setState({\r\n      elements: [\r\n        \r\n      ]\r\n    });\r\n  }\r\n\r\n  isSomeOneActiveSearch = () => this.state.elements.reduce(\r\n    (acc, item) => item.activeSearch + acc, false)\r\n\r\n  getSteps = () => this.state.elements.map((item, index) =>\r\n    item.activeSearch\r\n      ? (\r\n        <SearchWithSelection\r\n          heightSearchesUl={'200px'}\r\n          canClose={true}\r\n          Close={() => this.closeSearch(item)}\r\n          title={item.title}\r\n          setActiveValue={item.setActiveValue}\r\n          getActiveValue={item.getActiveValue}\r\n          getSearches={item.getSearches}\r\n          key={Keys.getRandomKey()}\r\n        />\r\n      )\r\n      : this.isSomeOneActiveSearch() ? null : (\r\n        <button\r\n          className={customClasses.openSearchBtn}\r\n          onClick={() => this.openSearch(item)}\r\n          key={Keys.getRandomKey()}\r\n        >\r\n            {`${item.title} (${item.getActiveValue()})`}\r\n        </button>\r\n      )\r\n  )\r\n\r\n  render() {\r\n    return (\r\n      <div className={customClasses.screen}>\r\n        <QuizHeader\r\n          btnToStartHandle={this.props.btnToStartHandle}\r\n          btnBackHandle={this.props.btnBackHandle}\r\n          btnNextHandle={() => this.props.btnNextHandle('next_screen')}\r\n        />\r\n        <div className={customClasses.mainBlock}>\r\n          <ul className={customClasses.specificationBlock}>\r\n            <li>\r\n              <button\r\n                className={customClasses.openSearchBtn}\r\n                // onClick={() => this.openSearch(item)}\r\n                key={Keys.getRandomKey()}\r\n              >\r\n                  {/* {`${item.title} (${item.getActiveValue()})`} */}\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SpecificationScreen;","import React from 'react';\r\nimport customClasses from './Quiz.module.css';\r\nimport StartScreen from './StartScreen/StartScreen.js';\r\nimport FavoritesScreen from './FavoritesScreen/FavoritesScreen.js';\r\nimport MainScreen from './MainScreen/MainScreen.js';\r\nimport SpecificationScreen from './SpecificationScreen/SpecificationScreen.js';\r\nimport Keys from '../../Functions/Keys.js';\r\n\r\nclass Quiz extends React.Component {\r\n\r\n  state = {\r\n\r\n    activeScreen: 'start_screen',\r\n    screensSequence: [],\r\n\r\n    activeType: '',\r\n    activeCategory: '',\r\n    activeSpecifications: [],\r\n    activeTimePeriods: [],\r\n    searches: ['search1', 'search2', 'search3'],\r\n\r\n    specification: {\r\n      labelsArr: [['Выбрать область', 'Выбрать город', 'Выбрать микрорайон', 'Выбрать улицу', 'Выбрать дом'], ['Выбрать компанию', 'Выбрать чтото еще', 'Выбрать еще чтото']],\r\n      activeIndex: 0\r\n    },\r\n\r\n    report: {\r\n      title: '',\r\n      content: []\r\n    }\r\n  }\r\n\r\n  setActiveType = (value) => {\r\n    this.setState({\r\n      activeType: value,\r\n      activeCategory: '',\r\n      activeSpecifications: '',\r\n      activeTimePeriods: []\r\n    });\r\n  }\r\n  setActiveCategory = (value) => this.setState({activeCategory: value})\r\n  setSpecification = (value) => {\r\n      this.setState(prevValue => ({\r\n      ...prevValue,\r\n      activeSpecifications: [...prevValue.activeSpecifications, value],\r\n      specification: {\r\n        ...prevValue.specification,\r\n        activeIndex: prevValue.specification.activeIndex + 1 \r\n      }\r\n    }))\r\n  }\r\n  setActiveTimePeriods = (value) => this.setState({activeTimePeriods: value})\r\n  getActiveType = () => this.state.activeType\r\n  getActiveCategory = () => this.state.activeCategory\r\n  getActiveSpecification = () => this.state.activeSpecifications\r\n  getSearches = (value) => {\r\n    return [\r\n      'dasd pouoi sdf ijo',\r\n      Keys.getRandomKey(),\r\n      Keys.getRandomKey(),\r\n      Keys.getRandomKey(),\r\n      Keys.getRandomKey(),\r\n      Keys.getRandomKey(),\r\n      Keys.getRandomKey(),\r\n      Keys.getRandomKey(),\r\n      Keys.getRandomKey()\r\n    ];\r\n    // this.state.searches;\r\n  }\r\n\r\n  changeScreen = (newScreen) => {\r\n    const activeScreen = this.state.activeScreen;\r\n    let canChange = true;\r\n\r\n    this.setState({activeScreen: 'load_screen'});\r\n\r\n    switch (activeScreen) {\r\n      case 'main_screen':\r\n        if (this.state.activeCategory === '')\r\n          canChange = false;\r\n        break;\r\n      case 'specification_screen':\r\n        if (this.state.activeSpecifications[this.state.specification.activeIndex] === [])\r\n          canChange = false;\r\n        break;\r\n      default:\r\n        canChange = true;\r\n    }\r\n\r\n    if (canChange)\r\n      this.setState(prevValue => ({\r\n        activeScreen: newScreen,\r\n        screensSequence: [...prevValue.screensSequence, activeScreen]\r\n      }));\r\n    else\r\n      this.setState({activeScreen: activeScreen});\r\n  }\r\n\r\n  returnScreen = (screen) => {\r\n    let nextScreen;\r\n    switch (screen) {\r\n      case 'start_screen':\r\n        nextScreen = <StartScreen changeScreen={this.changeScreen}/>\r\n        break;\r\n      case 'favorites_screen':\r\n        nextScreen = (\r\n          <FavoritesScreen\r\n            setActiveType={this.setActiveType}\r\n            setActiveCategory={this.setActiveCategory}\r\n            setActiveSpecification={this.setActiveSpecification}\r\n            setActiveTimePeriods={this.setActiveTimePeriods}\r\n            btnToStartHandle={this.btnToStartHandle}\r\n            changeScreen={this.changeScreen}\r\n          />\r\n        )\r\n        break;\r\n      case 'main_screen':\r\n        nextScreen = (\r\n          <MainScreen\r\n            btnToStartHandle={this.btnToStartHandle}\r\n            btnBackHandle={this.btnBackHandle}\r\n            btnNextHandle={this.changeScreen}\r\n            setActiveType={this.setActiveType}\r\n            getActiveType={this.getActiveType}\r\n            setActiveCategory={this.setActiveCategory}\r\n            getActiveCategory={this.getActiveCategory}\r\n            getSearches={this.getSearches}\r\n          />\r\n        );\r\n        break;\r\n      case 'specification_screen':\r\n        nextScreen = (\r\n          <SpecificationScreen \r\n            btnToStartHandle={this.btnToStartHandle}\r\n            btnBackHandle={this.btnBackHandle}\r\n            btnNextHandle={this.changeScreen}\r\n            setSpecification={this.setSpecification}\r\n            labels={this.state.specification.labelsArr[this.state.specification.activeIndex]}\r\n          />\r\n        );\r\n        break;\r\n      case 'finish_screen':\r\n        break;\r\n      default:\r\n        const load = <p className={customClasses.load}>&#xe02d;</p>;\r\n        nextScreen = load;\r\n        break;\r\n    }\r\n    return nextScreen;\r\n  }\r\n\r\n  btnToStartHandle = () =>\r\n    this.setState({\r\n      activeScreen: 'start_screen',\r\n      screensSequence: []\r\n    });\r\n\r\n\r\n  btnBackHandle = () =>\r\n    this.setState({activeScreen: this.state.screensSequence.pop()});\r\n\r\n\r\n  btnNextHandle = () => {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={customClasses.quiz}>\r\n        {this.returnScreen(this.state.activeScreen)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Quiz;","import React from 'react';\r\nimport SideContents from '../../components/SideContents/SideContents.js';\r\nimport Quiz from '../../components/ReportsPage/Quiz.js';\r\n\r\nclass Layout extends React.Component {\r\n  state = {\r\n    isMobile: false\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SideContents \r\n          activePageTitle={'Отчеты'}\r\n        />\r\n        <Quiz />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Layout;  ","import React from 'react';\nimport './css/fontIcons.css';\nimport ReportsPage from './containers/ReportsPage/Layout.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ReportsPage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}